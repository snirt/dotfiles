unbind r # unbind C-b r

set -s escape-time 0
set-option -sg escape-time 50
# Set the new prefix to Ctrl + §
set-option -g prefix M-a

# Bind Ctrl + § to send the prefix
bind-key C-a send-prefix

bind r source-file ~/.tmux.conf

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on


# split panes using | and -
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# switch panes using Alt+Shift+arrow without prefix
bind -n M-S-Left select-pane -L
bind -n M-S-Right select-pane -R
bind -n M-S-Up select-pane -U
bind -n M-S-Down select-pane -D


# resize pane using Alt + arrow without prefix

# Bind Cmd+Ctrl+Arrow keys to switch windows
bind-key -n M-S-Left previous-window
bind-key -n M-S-Right next-window

# Bind Cmd+Ctrl+` to open the windows list
bind-key -n C-M-` choose-window

# Bind Cmd+[ to move window left and select it
bind-key -n C-M-[ swap-window -t -1 \; select-window -t -1

# Bind Cmd+] to move window right and select it
bind-key -n C-M-] swap-window -t +1 \; select-window -t +1

# Bind Cmd+Ctrl+W to open the window list
bind-key -n C-M-w choose-window

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-no-clear
# Use vi-style key bindings in copy mode
setw -g mode-keys vi

# tmux yazi config
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM


# Undercurl
# set -g default-terminal "tmux-256color" # If you don't add this, then neovim :checkhealth will complain. But "alacritty" also works
# set-option -ga terminal-features ",alacritty:usstyle"

set -g default-terminal "tmux-256color"
set-option -gas terminal-overrides "*:Tc"
set-option -gas terminal-overrides "*:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# set -g pane-active-border-style "bg=default,fg=colour166"
# set -g pane-border-style "bg=default,fg=colour245"
# set -g pane-border-lines "double"

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# clock mode
# setw -g clock-mode-colour colour1

# status line in the top
set-option -g status-position top


# remane according to the current command
# set-option -g status-interval 1
# set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{pane_current_command}'
# set -g allow-rename on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'catppuccin/tmux'
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# set-option -ga terminal-features ",alacritty:usstyle"
# 

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded





# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l




# vim mode
set-window-option -g mode-keys vi
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
 # set -g @plugin 'erikw/tmux-powerline'

# power theme
set -g @plugin 'wfxr/tmux-power'
set -g @tmux_power_theme 'coral'
# set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'wfxr/tmux-net-speed'
# set -g @tmux_power_date_icon ' '
# set -g @tmux_power_time_icon ' '
set -g @tmux_power_user_icon ' '
set -g @tmux_power_session_icon ' '
set -g @tmux_power_show_upload_speed    true
set -g @tmux_power_show_download_speed  true
set -g @tmux_power_show_web_reachable   true
set -g @tmux_power_right_arrow_icon     ''
set -g @tmux_power_left_arrow_icon      ''
set -g @tmux_power_upload_speed_icon    '󰕒'
set -g @tmux_power_download_speed_icon  '󰇚'
set -g @tmux_power_prefix_highlight_pos 'R'
set -g @net_speed_format "⬆ #{net_upload_speed} ⬇ #{net_download_speed}"
set -g @tmux_power_date_format ''

# Override status-right to remove date
set -g status-right ''



# set -g @plugin 'fabioluciano/tmux-tokyo-night'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
# set -g @plugin 'Nybkox/tmux-kanagawa'
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "
# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_number_position "right"
#
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
#
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W"
#
# set -g @catppuccin_status_modules_right "directory user host session"
# set -g @catppuccin_status_left_separator  " "
# set -g @catppuccin_status_right_separator ""
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"
#
# set -g @catppuccin_directory_text "#{pane_current_path}"

# set inactive / active window styles
set -g window-style 'fg=terminal,bg=colour236'
set -g window-active-style 'fg=terminal,bg=terminal'

# tmux session
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# setw -g aggressive-resize off

